version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:16-alpine
    container_name: catcat-postgres
    environment:
      POSTGRES_DB: catcat
      POSTGRES_USER: catcat
      POSTGRES_PASSWORD: catcat_password_change_in_production
      POSTGRES_INITDB_ARGS: "--encoding=UTF8"
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U catcat"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - catcat-network

  # Redis Cache
  redis:
    image: redis:7-alpine
    container_name: catcat-redis
    command: redis-server --requirepass catcat_redis_password_change_in_production --appendonly yes
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "--raw", "incr", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - catcat-network

  # NATS with JetStream
  nats:
    image: nats:2.10-alpine
    container_name: catcat-nats
    command:
      - "-js"
      - "-sd"
      - "/data"
      - "-m"
      - "8222"
    ports:
      - "4222:4222"  # Client connections
      - "8222:8222"  # Monitoring
    volumes:
      - nats_data:/data
    healthcheck:
      test: ["CMD", "wget", "--spider", "-q", "http://localhost:8222/healthz"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - catcat-network

  # MinIO Object Storage
  minio:
    image: minio/minio:latest
    container_name: catcat-minio
    command: server /data --console-address ":9001"
    environment:
      MINIO_ROOT_USER: catcat
      MINIO_ROOT_PASSWORD: catcat_minio_password_change_in_production
    ports:
      - "9000:9000"  # API
      - "9001:9001"  # Console
    volumes:
      - minio_data:/data
    healthcheck:
      test: ["CMD", "mc", "ready", "local"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - catcat-network

  # CatCat API
  api:
    build:
      context: .
      dockerfile: src/CatCat.API/Dockerfile
    container_name: catcat-api
    environment:
      ASPNETCORE_ENVIRONMENT: Production
      ASPNETCORE_URLS: http://+:8080
      ConnectionStrings__Database: "Host=postgres;Port=5432;Database=catcat;Username=catcat;Password=catcat_password_change_in_production"
      ConnectionStrings__Redis: "redis:6379,password=catcat_redis_password_change_in_production"
      ConnectionStrings__Nats: "nats://nats:4222"
      MinIO__Endpoint: "minio:9000"
      MinIO__AccessKey: "catcat"
      MinIO__SecretKey: "catcat_minio_password_change_in_production"
      MinIO__BucketName: "catcat-media"
      MinIO__UseSSL: "false"
      Jwt__SecretKey: "change-this-super-secret-key-in-production-must-be-at-least-32-characters-long"
      Jwt__Issuer: "CatCat.API"
      Jwt__Audience: "CatCat.Client"
      Jwt__ExpiryMinutes: "1440"
      Stripe__SecretKey: "your-stripe-secret-key"
      Stripe__PublishableKey: "your-stripe-publishable-key"
      Serilog__MinimumLevel__Default: "Information"
      OpenTelemetry__ServiceName: "CatCat.API"
      OpenTelemetry__Endpoint: "http://jaeger:4317"
    ports:
      - "5000:8080"
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
      nats:
        condition: service_healthy
      minio:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "wget", "--spider", "-q", "http://localhost:8080/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - catcat-network
    restart: unless-stopped

  # CatCat Web Frontend
  web:
    build:
      context: src/CatCat.Web
      dockerfile: Dockerfile
    container_name: catcat-web
    environment:
      VITE_API_BASE_URL: http://localhost:5000
    ports:
      - "3000:80"
    depends_on:
      - api
    networks:
      - catcat-network
    restart: unless-stopped

  # Jaeger (Optional - for OpenTelemetry tracing)
  jaeger:
    image: jaegertracing/all-in-one:latest
    container_name: catcat-jaeger
    environment:
      COLLECTOR_OTLP_ENABLED: "true"
    ports:
      - "16686:16686"  # Jaeger UI
      - "4317:4317"    # OTLP gRPC
      - "4318:4318"    # OTLP HTTP
    networks:
      - catcat-network

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local
  nats_data:
    driver: local
  minio_data:
    driver: local

networks:
  catcat-network:
    driver: bridge
