# AOT 构建阶段 (需要更多资源和时间)
FROM mcr.microsoft.com/dotnet/sdk:9.0 AS build
WORKDIR /src

# 安装 AOT 编译所需工具
RUN apt-get update && apt-get install -y clang zlib1g-dev && rm -rf /var/lib/apt/lists/*

# 复制项目文件
COPY ["Directory.Build.props", "./"]
COPY ["Directory.Packages.props", "./"]
COPY ["src/CatCat.Gateway/CatCat.Gateway.csproj", "src/CatCat.Gateway/"]

# 还原依赖
RUN dotnet restore "src/CatCat.Gateway/CatCat.Gateway.csproj"

# 复制所有源代码
COPY src/CatCat.Gateway/ src/CatCat.Gateway/

# AOT 发布 (生成本地二进制文件)
WORKDIR "/src/src/CatCat.Gateway"
RUN dotnet publish "CatCat.Gateway.csproj" -c Release -o /app/publish \
    /p:PublishAot=true \
    /p:StripSymbols=true \
    /p:IlcOptimizationPreference=Speed

# 运行时阶段 (使用轻量级基础镜像)
FROM mcr.microsoft.com/dotnet/runtime-deps:9.0 AS runtime
WORKDIR /app

# 安装 wget (用于健康检查)
RUN apt-get update && apt-get install -y wget && rm -rf /var/lib/apt/lists/*

# 复制 AOT 编译的二进制文件
COPY --from=build /app/publish .

# 暴露端口
EXPOSE 80
EXPOSE 443

# 健康检查
HEALTHCHECK --interval=30s --timeout=10s --start-period=20s --retries=3 \
  CMD wget --no-verbose --tries=1 --spider http://localhost/health || exit 1

# AOT 入口点 (直接运行本地二进制)
ENTRYPOINT ["./CatCat.Gateway"]

