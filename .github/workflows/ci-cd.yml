name: CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

env:
  DOTNET_VERSION: '9.0.x'
  NODE_VERSION: '18.x'

jobs:
  # Backend build and test
  backend:
    name: Backend Build & Test
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4

    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: ${{ env.DOTNET_VERSION }}

    - name: Restore dependencies
      run: dotnet restore src/CatCat.API/CatCat.API.csproj

    - name: Build
      run: dotnet build src/CatCat.API/CatCat.API.csproj --configuration Release --no-restore

    - name: Test
      run: dotnet test src/CatCat.API/CatCat.API.csproj --configuration Release --no-build --verbosity normal || true

    - name: Publish
      run: dotnet publish src/CatCat.API/CatCat.API.csproj -c Release -o ./publish

    - name: Upload artifacts
      uses: actions/upload-artifact@v4
      with:
        name: backend-artifacts
        path: ./publish

  # Frontend build and test
  frontend:
    name: Frontend Build & Test
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'npm'
        cache-dependency-path: src/CatCat.Web/package-lock.json

    - name: Install dependencies
      working-directory: src/CatCat.Web
      run: npm ci

    - name: Build
      working-directory: src/CatCat.Web
      run: npm run build

    - name: Upload artifacts
      uses: actions/upload-artifact@v4
      with:
        name: frontend-artifacts
        path: src/CatCat.Web/dist

  # Build Docker images
  docker:
    name: Build Docker Images
    runs-on: ubuntu-latest
    needs: [backend, frontend]
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'

    steps:
    - uses: actions/checkout@v4

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Log in to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Extract metadata for API
      id: meta-api
      uses: docker/metadata-action@v5
      with:
        images: ${{ secrets.DOCKER_USERNAME }}/catcat-api
        tags: |
          type=ref,event=branch
          type=sha
          type=raw,value=latest,enable={{is_default_branch}}

    - name: Build and push API image
      uses: docker/build-push-action@v5
      with:
        context: .
        file: src/CatCat.API/Dockerfile
        push: true
        tags: ${{ steps.meta-api.outputs.tags }}
        cache-from: type=registry,ref=${{ secrets.DOCKER_USERNAME }}/catcat-api:buildcache
        cache-to: type=registry,ref=${{ secrets.DOCKER_USERNAME }}/catcat-api:buildcache,mode=max

    - name: Extract metadata for Web
      id: meta-web
      uses: docker/metadata-action@v5
      with:
        images: ${{ secrets.DOCKER_USERNAME }}/catcat-web
        tags: |
          type=ref,event=branch
          type=sha
          type=raw,value=latest,enable={{is_default_branch}}

    - name: Build and push Web image
      uses: docker/build-push-action@v5
      with:
        context: .
        file: src/CatCat.Web/Dockerfile
        push: true
        tags: ${{ steps.meta-web.outputs.tags }}
        cache-from: type=registry,ref=${{ secrets.DOCKER_USERNAME }}/catcat-web:buildcache
        cache-to: type=registry,ref=${{ secrets.DOCKER_USERNAME }}/catcat-web:buildcache,mode=max

  # Deploy (optional - configure based on your deployment target)
  deploy:
    name: Deploy to Production
    runs-on: ubuntu-latest
    needs: [docker]
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'

    steps:
    - uses: actions/checkout@v4

    - name: Deploy notification
      run: |
        echo "Deployment step - configure based on your infrastructure"
        echo "Options: Kubernetes, Docker Swarm, Cloud services, etc."

